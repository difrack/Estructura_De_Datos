import networkx as nx
import matplotlib.pyplot as plt
from itertools import permutations

graph_data = {
    "Yucatán": {"Campeche": 120, "Quintana Roo": 150},
    "Campeche": {"Yucatán": 120, "Tabasco": 180},
    "Quintana Roo": {"Yucatán": 150, "Veracruz": 300},
    "Tabasco": {"Campeche": 180, "Veracruz": 200, "Chiapas": 160},
    "Veracruz": {"Quintana Roo": 300, "Tabasco": 200, "Oaxaca": 250},
    "Chiapas": {"Tabasco": 160, "Oaxaca": 220},
    "Oaxaca": {"Veracruz": 250, "Chiapas": 220}
}

G = nx.Graph()
for estado, conexiones in graph_data.items():
    for destino, costo in conexiones.items():
        G.add_edge(estado, destino, weight=costo)

def recorrido_minimo(G):
    estados = list(G.nodes)
    min_cost = float("inf")
    best_path = []
    for perm in permutations(estados):
        cost = sum(G[perm[i]][perm[i+1]]['weight'] for i in range(len(perm) - 1))
        if cost < min_cost:
            min_cost = cost
            best_path = perm
    return best_path, min_cost

def recorrido_con_repeticion(G):
    estados = list(G.nodes)
    path = estados + [estados[0]]
    cost = sum(G[path[i]][path[i+1]]['weight'] for i in range(len(path) - 1))
    return path, cost

mejor_recorrido, costo_minimo = recorrido_minimo(G)
recorrido_repetido, costo_repetido = recorrido_con_repeticion(G)

pos = nx.spring_layout(G)
nx.draw(G, pos, with_labels=True, node_color='lightblue', edge_color='gray', node_size=2000, font_size=10)
edges_labels = {(u, v): d['weight'] for u, v, d in G.edges(data=True)}
nx.draw_networkx_edge_labels(G, pos, edge_labels=edges_labels)
plt.title("Mapa de conexiones entre estados")
plt.show()

print("Recorrido mínimo sin repetir estados:", mejor_recorrido, "Costo total:", costo_minimo)
print("Recorrido con repetición:", recorrido_repetido, "Costo total:", costo_repetido)
